---
interface Props {
	href: string;
	size?: "xs" | "sm" | "md" | "lg";
	block?: boolean;
	style?: "outline" | "primary" | "hover" | "muted";
	class?: string;
	[x: string]: any;
}

const {
	href,
	block,
	size = "md",
	style = "primary",
	class: className,
	...rest
} = Astro.props;

const sizes = {
	xs: "",
	sm: "px-1 py-2",
	md: "px-2 py-3",
	lg: "px-3 py-4",
};

const styles = {
	outline:
		"text-center border border-neutral-500/50 hover:border-neutral-500 text-neutral-500 dark:text-neutral-400 hover:text-black focus:bg-black/5 focus:outline-none focus:shadow-outline hover:bg-black/5 dark:hover:bg-white/5 dark:focus:bg-white/5 dark:hover:text-white",
	primary:
		"text-center bg-stone-950 outline-2 dark:bg-gray-100 hover:bg-stone-800 dark:hover:bg-white focus-visible:bg-stone-500 dark:focus-visible:bg-gray-100 text-white dark:text-black border-transparent active:outline shadow-sm",
	muted: "text-sm font-semibold leading-6 text-gray-800 dark:text-gray-100",
	hover:
		"text-center text-neutral-500 dark:text-neutral-400 hover:text-black focus:bg-black/5 focus:outline-none focus:shadow-outline hover:bg-black/5 dark:hover:bg-white/5 dark:focus:bg-white/5 dark:hover:text-white",
};
---

<a
	href={href}
	{...rest}
	class:list={[
		"rounded-lg font-semibold transition-all duration-300 ease-in-out focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2",
		block && "w-full",
		sizes[size],
		styles[style],
		className,
	]}>
	<slot />
</a>