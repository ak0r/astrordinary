---
import Picture from "astro/components/Picture.astro";
import BaseLayout from "@/layouts/BaseLayout.astro"
import Container from "@/components/Container.astro";
import LinkMod from "@/components/LinkMod.astro";
import Prose from "@/components/Prose.astro";
import MasonryGallery from "@/components/MasonryGallery.astro";

import { getFormattedDate, slugify } from '@/utils/commonFunctions';
import { getAllPublishedPosts } from "@/utils/blogFunctions";
import { Icon } from "astro-icon/components";
import { glob } from 'glob';


async function ImageFetcher(pattern: string) {
  const files = glob.sync(pattern, { posix: true })
  const imagePromises = files.map(async (file) => {
    const src = file.replace('public', '')
    return { src }
  })

  const imageFiles = await Promise.all(imagePromises)

  imageFiles.sort((a, b) => a.src.localeCompare(b.src))

  return imageFiles
}

export async function getStaticPaths() {
  const articles = await getAllPublishedPosts();

  return articles.map((article) => {
    return {
      params: {
        slug: article.slug,
      },
      props: {
        article,
      },
    };
  });
}


const {
  article,
  article: {
    slug,
    data: { title, tags, publishedDate, coverImage, gallery },
  },
} = Astro.props;

const currentPostName = article.id;
const currentDirectory = currentPostName.split('/')[0];

console.log("All Images " + currentDirectory )

const { useInternalGallery, externalImages } = gallery || {};
const { Content } = await article.render();
const collection = article.collection;
// const hasGallery = gallery?.galleryPath && gallery?.galleryPath?.length > 0;
const pageTitle = {
	title: `${title}` || "Title" ,
  subTitle: "" || "Sub-Title",
};

---
<BaseLayout pageTitle=`${pageTitle.title}` pageDesc=`${pageTitle.subTitle}` showTitle={false}>
	<Container className="flex">
		<article class="flex flex-col space-y-5 rounded-xl">
			<div class="flex items-center">
        <LinkMod href={`/${collection}`} style={"hover"} size="sm" class="text-sm items-center hover:p-2 flex">
          <Icon name="mdi:arrow-back" size={16}/>
          &nbsp All Articles
        </LinkMod>
      </div>
      <div class="space-y-5">
        <div class="flex">
          {
            tags.length > 0 && (
                <div class="flex flex-wrap mt-4 gap-x-3 gap-y-1 text-md text-zinc-500 dark:text-zinc-400">
                    {tags.map((tag: string) => (
                        <LinkMod href={`/tags/${slugify(tag)}`} className="text-sm hover:underline" style="muted">
                            #{tag}
                        </LinkMod>
                    ))}
                </div>
            )
          }
        </div>

        <!-- Post title and meta -->
        <div class="mb-8">
        {
          <h1 class="text-2xl font-bold mb-2">{title}</h1>
          <time class="text-md font-base text-neutral-500">{getFormattedDate(publishedDate)}</time>
        }
        </div>

        <!-- Featured image -->
        {
          coverImage && (
            <div class="featuredImage">
              <Picture 
                src={coverImage.imagePath} 
                alt={coverImage.description}
                inferSize
                aspect-ratio="3:2" 
                loading="lazy"
                format=['avif', 'webp', 'jpeg']
                class="rounded-lg ring-1 ring-zinc-900/30  dark:ring-white/30"
              />
            </div>
          )
        }

        <!-- Post content -->
        <Prose>
          <Content />
        </Prose>

        <!-- Gallery if available -->
        {
          (useInternalGallery) && (
            <>
              <h2 class="font-medium text-md">{gallery.galleryTitle}</h2>
              <MasonryGallery galleryPath={currentDirectory} galleryAlt={gallery.galleryTitle} externalImages={externalImages}/>
            </>
          )
        }

      </div>
		</article>
	</Container>
</BaseLayout>